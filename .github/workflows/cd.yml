name: CD-Server

on:
  workflow_run:
    workflows: ["CI-Server"]
    types:
      - completed

env:
  DOCKERHUB_ENABLED: 'true'   # mude para 'false' se não for usar DockerHub
  IMAGE_NAME: inineapi/visiondata6sem
  TAG: ${{ github.event.workflow_run.head_sha }}

jobs:
  gather-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Baixa binário
        uses: actions/download-artifact@v4
        with:
          name: visiondata
          run-id: ${{ github.event.workflow_run.id }}
          path: ./dist

      - name: Baixa cobertura
        uses: actions/download-artifact@v4
        with:
          name: coverage
          run-id: ${{ github.event.workflow_run.id }}
          path: ./dist

      - name: List artifacts
        run: ls -R ./dist

      - name: Compacta todos (bundle)
        run: |
          tar -czf pack-visiondata.tar.gz -C dist .

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: pack-visiondata
          path: pack-visiondata.tar.gz

      - name: Lista artefatos no CD
        run: ls -lh ./dist

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [gather-artifacts]
    if: ${{ github.event.workflow_run.head_branch == 'develop' }}
    environment:
      name: dev
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: pack-visiondata
          path: .
      - name: Deploy DEV (exemplo)
        run: |
          echo "Deploy DEV"
          tar -xzf pack-visiondata.tar.gz

  deploy-qa:
    runs-on: ubuntu-latest
    needs: [gather-artifacts]
    if: ${{ startsWith(github.event.workflow_run.head_branch, 'sprint/') }}
    environment:
      name: qa
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: pack-visiondata
          path: .
      - name: Deploy QA (Homolog)
        run: |
          echo "Deploy QA/Homolog"
          tar -xzf pack-visiondata.tar.gz

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [gather-artifacts]
    if: ${{ github.event.workflow_run.head_branch == 'main' }}
    environment:
      name: staging
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: pack-visiondata
          path: .
      - name: Deploy Staging
        run: |
          echo "Deploy Staging"
          tar -xzf pack-visiondata.tar.gz

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [gather-artifacts]
    if: ${{ github.event.workflow_run.head_branch == 'prod' }}
    environment:
      name: production
      url: https://sua-url-de-producao.exemplo
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: pack-visiondata
          path: .
      - name: Deploy Produção (gated)
        run: |
          echo "Deploy Produção APÓS APROVAÇÃO"
          tar -xzf pack-visiondata.tar.gz
